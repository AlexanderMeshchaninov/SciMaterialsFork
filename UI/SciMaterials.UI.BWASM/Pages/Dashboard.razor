@page "/dashboard"
@using SciMaterials.Contracts.API.DTO.Files;
@using SciMaterials.Contracts.Result;
@using SciMaterials.Contracts.WebApi.Clients.Files;
@inject IFilesClient filesClient;

@if (Files is null)
{
	<p>Загрузка</p>
}
else
{
	<table class="table table-hover">
		<thead class="thead-dark">
			<tr>
				<th scope="col">ИД</th>
				<th scope="col">Имя файла</th>
				<th scope="col">Размер</th>
			</tr>
		</thead>
		<tbody>
			@foreach(var file in Files)
			{
			<tr>
				<th scope="row">@file.Id</th>
				<td>@file.Name</td>
				<td>@file.Size</td>
			</tr>
			}
		</tbody>
	</table>

}

@code {
	public List<GetFileResponse>? Files { get; set; } = null!;

	[Parameter]
	public int PageNumber { get; set; } = 1;

	[Parameter]
	public int PageCount { get; set; } = 5;

	protected override async Task OnInitializedAsync()
	{
		await UpdateAsync();
	}

	public async Task UpdateAsync()
	{
		var fileResponse = await filesClient.GetPageAsync(PageNumber, PageCount);
		Files = fileResponse.Data;
	}

	protected override async Task OnParametersSetAsync()
	{
		base.OnParametersSetAsync();
		await UpdateAsync();
	}
}