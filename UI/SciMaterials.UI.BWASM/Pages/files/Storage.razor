@page "/storage"
@using System.Net.Http.Json
@inject NavigationManager NavigationManager
@inject HttpClient httpClient

<MudText Class="mb-5" Typo="Typo.h3" Align="Align.Start">Files</MudText>
<MudGrid Spacing="@spacing" Justify="Justify.FlexStart">
    <MudItem xs="12">
        <MudStack Justify="Justify.FlexEnd" Row="true">
            <MudIconButton Icon="@Icons.Material.Filled.List" aria-label="delete" OnClick="()=>ToFileCollectionTableUrl()"></MudIconButton>
            <MudSelect @bind-Value="filterValue" Label="Filter" AdornmentIcon="@Icons.Material.Filled.FilterList">
                <MudSelectItem Value="@("Filter #1")"/>
                <MudSelectItem Value="@("Filter #2")"/>
                <MudSelectItem Value="@("Filter #3")"/>
            </MudSelect>
            <MudText Typo="Typo.subtitle1" Align="Align.Start">Sort by:</MudText>
            <MudSelect @bind-Value="sortValue" Dense="true" T="string" Variant="Variant.Text">
                <MudSelectItem Value="@("Sort #1")"/>
                <MudSelectItem Value="@("Sort #2")"/>
                <MudSelectItem Value="@("Sort #3")"/>
            </MudSelect>
        </MudStack>
       
    </MudItem>
    
    @foreach (var id in Ids)
    {
        <MudItem>
            <MudButton Class="rounded-lg px-1 py-1" Variant="Variant.Text" Color="Color.Primary" OnClick="() => ToFileDetailsUrl(id)">
                <MudPaper Height="100px" Width="150px">
                    @if (true)
                    {
                        <MudIcon Icon="@Icons.Material.Filled.FilePresent" Style="font-size: 4rem;"/>
                    }
                    else
                    {
                        <MudIcon Icon="@Icons.Material.Filled.Folder" Style="font-size: 4rem;"/>
                    }
                    <MudText Class="mx-1" Typo="Typo.subtitle1" Align="Align.Start">File name #@(id)</MudText>
                </MudPaper>
            </MudButton>
        </MudItem>
    }

</MudGrid>


@code {
    private IEnumerable<int> Ids;
    public int spacing { get; set; } = 2;
    private string filterValue { get; set; }
    private string sortValue { get; set; }
    protected override async Task OnInitializedAsync()
    {
    
        Ids = Enumerable.Range(1, 20);
    }

    private void ToFileDetailsUrl(int id)
    {
        NavigationManager.NavigateTo($"/filedetails/{id}");
    }
    private void ToFileCollectionTableUrl()
    {
        NavigationManager.NavigateTo($"/storage-table");
    }
}