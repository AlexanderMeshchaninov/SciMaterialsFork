@page "/storage-table"
@using System.Net.Http.Json
@inject NavigationManager NavigationManager
@inject HttpClient httpClient

<style type="text/css">
    .mud-table-head .header-centered th {
        text-align: center;
        font-size: 1.2em;
    }

    .mud-table-foot .bold-text .mud-table-cell {
        font-weight: 500;
    }
</style>

<MudText Class="mb-5" Typo="Typo.h3" Align="Align.Start">Files</MudText>

<FilesFilter/>

<MudTable Items="@Ids" MultiSelection="true" @bind-SelectedItems="selectedItems" Hover="true" Breakpoint="Breakpoint.Sm" Striped="true" Bordered="false"
          CustomHeader="true" CustomFooter="true" HeaderClass="table-head-bordered" FooterClass="table-foot-bordered">
    <HeaderContent>

        <MudTHeadRow IsCheckable="true">
            <MudTh></MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Size</MudTh>
            <MudTh></MudTh>
        </MudTHeadRow>
    </HeaderContent>
    <RowTemplate>
        @if (true)
        {
            <MudTd><MudIcon Icon="@Icons.Material.Filled.FilePresent" /></MudTd>
        }
        else
        {
            <MudTd><MudIcon Icon="@Icons.Material.Filled.Folder"/></MudTd>
        }

        <MudTd DataLabel="Name">@($"Name #{context}")</MudTd>
        <MudTd DataLabel="Size">@($"{context} gb")</MudTd>
        <MudTh>
            <MudButton Variant="Variant.Filled" Size="Size.Small" OnClick="() => ToFileDetailsUrl(context)">Edit</MudButton>
            <MudButton Variant="Variant.Filled" Size="Size.Small" OnClick="() => Delete(context)">Delete</MudButton>
        </MudTh>
    </RowTemplate>
    <FooterContent>
        <MudTFootRow IsCheckable="true">
            <MudTd colspan="5">Selected: @selectedItems.Count</MudTd>
        </MudTFootRow>
    </FooterContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>




@code {
    private string searchString1 = "";
    private bool _hidePosition;
    private IEnumerable<int> Ids;
    private HashSet<int> selectedItems = new HashSet<int>();
    protected override async Task OnInitializedAsync()
    {

        Ids = Enumerable.Range(1, 20);
    }
    private void Delete(int id)
    {
        //Delete logic
    }
    private void ToFileDetailsUrl(int id)
    {
        NavigationManager.NavigateTo($"/filedetails/{id}");
    }
}



